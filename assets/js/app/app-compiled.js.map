{"version":3,"sources":["app.js"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAM,WAAY,SAAZ,QAAY,OAAc;AAAA,QAAZ,OAAY,QAAZ,OAAY;;AAC5B,QAAI,cAAJ;AACA,WACI;AAAA;AAAA;AACI;AACI,iBAAK,mBAAM;AACP,wBAAQ,IAAR;AACH,aAHL,GADJ;AAKI;AAAA;AAAA,cAAQ,SAAS,mBAAI;AACjB,4BAAQ,MAAM,KAAd;AACA,0BAAM,KAAN,GAAY,EAAZ;AACH,iBAHD;AAAA;AAAA;AALJ,KADJ;AAYH,CAdD;;AAgBA,IAAM,OAAM,SAAN,IAAM,QAAkB;AAAA,QAAhB,IAAgB,SAAhB,IAAgB;AAAA,QAAX,MAAW,SAAX,MAAW;;AAC1B,WAAQ;AAAA;AAAA,UAAI,SAAS;AAAA,uBAAI,OAAO,KAAK,EAAZ,CAAJ;AAAA,aAAb;AAAmC,aAAK;AAAxC,KAAR;AACH,CAFD;;AAIA,IAAM,WAAW,SAAX,QAAW,QAAoB;AAAA,QAAlB,KAAkB,SAAlB,KAAkB;AAAA,QAAZ,MAAY,SAAZ,MAAY;;AACjC,QAAM,WAAW,MAAM,GAAN,CAAU,UAAC,IAAD,EAAQ;AAC/B,eAAQ,oBAAC,IAAD,IAAM,MAAM,IAAZ,EAAkB,KAAK,KAAK,EAA5B,EAAgC,QAAQ,MAAxC,GAAR;AACH,KAFgB,CAAjB;;AAIA,WAAQ;AAAA;AAAA;AAAK;AAAL,KAAR;AACH,CAND;;AAQA,IAAM,QAAQ,SAAR,KAAQ,GAAI;AACd,WAAQ;AAAA;AAAA;AACJ;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ;AADI,KAAR;AAKH,CAND;AAOA,OAAO,EAAP,GAAY,CAAZ;;IAEM,O;;;AACF,qBAAY,KAAZ,EAAkB;AAAA;;AAAA,sHACR,KADQ;;AAEd,cAAK,KAAL,GAAW;AACP,kBAAK;AADE,SAAX;;AAIA,cAAK,OAAL,GAAe,MAAK,OAAL,CAAa,IAAb,OAAf;AACA,cAAK,YAAL,GAAoB,MAAK,YAAL,CAAkB,IAAlB,OAApB;AAPc;AAQjB;;;;gCAEO,G,EAAI;AACR,gBAAM,OAAO,EAAC,MAAK,GAAN,EAAU,IAAG,OAAO,EAAP,EAAb,EAAb;;AAEA,iBAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAqB,IAArB;;AAEA,iBAAK,QAAL,CAAc,EAAC,MAAK,KAAK,KAAL,CAAW,IAAjB,EAAd;AACH;;;qCAEY,E,EAAG;AACZ,gBAAM,YAAY,KAAK,KAAL,CAAW,IAAX,CAAgB,MAAhB,CAAuB,UAAC,IAAD,EAAQ;AAC7C,oBAAG,KAAK,EAAL,IAAS,EAAZ,EAAgB,OAAO,KAAK,EAAZ;AACnB,aAFiB,CAAlB;AAGC,iBAAK,QAAL,CAAc,EAAC,MAAK,SAAN,EAAd;AACJ;;;iCAEO;AACJ,mBACI;AAAA;AAAA;AACI,oCAAC,KAAD,OADJ;AAEI,oCAAC,QAAD;AACI,6BAAS,KAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB;AADb,kBAFJ;AAKI,oCAAC,QAAD;AACI,2BAAO,KAAK,KAAL,CAAW,IADtB;AAEI,4BAAS,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB;AAFb;AALJ,aADJ;AAYH;;;;EAvCiB,MAAM,S;;AA0C5B,SAAS,MAAT,CAAgB,oBAAC,OAAD,OAAhB,EAA2B,SAAS,cAAT,CAAwB,eAAxB,CAA3B","file":"app-compiled.js","sourcesContent":["const TodoForm =  ({addTodo}) =>{\n    let input;\n    return (\n        <div>\n            <input\n                ref={node=>{\n                    input = node;\n                }}/>\n            <button onClick={()=>{\n                addTodo(input.value);\n                input.value='';\n            }}>+</button>\n        </div>\n    );\n};\n\nconst Todo =({todo,remove}) =>{\n    return (<li onClick={()=>remove(todo.id)}>{todo.text}</li>);\n};\n\nconst TodoList = ({todos,remove}) => {\n    const todoNode = todos.map((todo)=>{\n        return (<Todo todo={todo} key={todo.id} remove={remove}/>)\n    });\n\n    return (<ul>{todoNode}</ul>);\n};\n\nconst Title = ()=>{\n    return (<div>\n        <div>\n            <h1>To-do</h1>\n        </div>\n    </div>);\n};\nwindow.id = 0;\n\nclass TodoApp extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            data:[]\n        };\n\n        this.addTodo = this.addTodo.bind(this);\n        this.handleRemove = this.handleRemove.bind(this);\n    }\n\n    addTodo(val){\n        const todo = {text:val,id:window.id++};\n\n        this.state.data.push(todo);\n\n        this.setState({data:this.state.data});\n    }\n\n    handleRemove(id){\n        const remainder = this.state.data.filter((todo)=>{\n            if(todo.id!=id) return todo.id;\n        });\n         this.setState({data:remainder});\n    }\n\n    render(){\n        return(\n            <div>\n                <Title/>\n                <TodoForm\n                    addTodo={this.addTodo.bind(this)}\n                />\n                <TodoList\n                    todos={this.state.data}\n                    remove ={this.handleRemove.bind(this)}\n                />\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<TodoApp/>,document.getElementById('app-container'));"]}